#------------------------------------------------
#boundaries for the uniform prior
mu_lim <- c(1, 20)
p_mu <- 1./(mu_lim[2]-mu_lim[1])
#definition of prior and calculation of the posterior
uniform_prior     <- function(mu) sapply(mu, function(x) ifelse(x > mu_lim[1] && x < mu_lim[2], p_mu, 0))
uniform_posterior <- function(mu) posterior(mu, uniform_prior, pois_likelihood, lower=mu_lim[1], upper=mu_lim[2], x=observed_particles)
#compute the 95% credibility interval
uniform_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(uniform_posterior, p = P, lower = mu_lim[1], upper = mu_lim[2]))
#-------------- Plot the posterior --------------
curve(uniform_posterior, from = 0, to = mu_lim[2], xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a uniform prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=uniform_95_interval[1], to=uniform_95_interval[2], length.out=500)
y_plot <- c(0, uniform_posterior(x_plot), 0)
x_plot <- c(uniform_95_interval[1], x_plot, uniform_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.25),border = NA)
abline(v = mean(observed_particles), col = color_vector[6], lwd=2, lty='dashed')
#--------- Computing mean, std, median ----------
mean_uniform   <- mean_pdf(uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
std_uniform    <- std_pdf (uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
median_uniform <- inverse_cumulative(uniform_posterior, 0.5, mu_lim[1], mu_lim[2])
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_uniform, std_uniform, median_uniform, uniform_95_interval[1], uniform_95_interval[2])
)
#coding the data from the observations
observed_particles <- c(4, 1, 3, 1, 5, 3)
particles_mean <- observed_particles %>% mean
particles_std  <- observed_particles %>% sd
writeLines(sprintf(
'The observed number of particles in a fixed time interval of 10s is on average %.1f, with a standard deviation of %.1f',
particles_mean, particles_std
))
#------------------------------------------------
#------------ POSITIVE UNIFORM PRIOR ------------
#------------------------------------------------
#boundaries for the uniform prior
mu_lim <- c(1, 20)
p_mu <- 1./(mu_lim[2]-mu_lim[1])
#definition of prior and calculation of the posterior
uniform_prior     <- function(mu) sapply(mu, function(x) ifelse(x > mu_lim[1] && x < mu_lim[2], p_mu, 0))
uniform_posterior <- function(mu) posterior(mu, uniform_prior, pois_likelihood, lower=mu_lim[1], upper=mu_lim[2], x=observed_particles)
#compute the 95% credibility interval
uniform_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(uniform_posterior, p = P, lower = mu_lim[1], upper = mu_lim[2]))
#-------------- Plot the posterior --------------
curve(uniform_posterior, from = 0, to = mu_lim[2], xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a uniform prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=uniform_95_interval[1], to=uniform_95_interval[2], length.out=500)
y_plot <- c(0, uniform_posterior(x_plot), 0)
x_plot <- c(uniform_95_interval[1], x_plot, uniform_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.35),border = NA)
abline(v = mean(observed_particles), col = color_vector[6], lwd=2, lty='dashed')
#--------- Computing mean, std, median ----------
mean_uniform   <- mean_pdf(uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
std_uniform    <- std_pdf (uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
median_uniform <- inverse_cumulative(uniform_posterior, 0.5, mu_lim[1], mu_lim[2])
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_uniform, std_uniform, median_uniform, uniform_95_interval[1], uniform_95_interval[2])
)
#coding the data from the observations
observed_particles <- c(4, 1, 3, 1, 5, 3)
particles_mean <- observed_particles %>% mean
particles_std  <- observed_particles %>% sd
writeLines(sprintf(
'The observed number of particles in a fixed time interval of 10s is on average %.1f, with a standard deviation of %.1f',
particles_mean, particles_std
))
#------------------------------------------------
#------------ POSITIVE UNIFORM PRIOR ------------
#------------------------------------------------
#boundaries for the uniform prior
mu_lim <- c(1, 20)
p_mu <- 1./(mu_lim[2]-mu_lim[1])
#definition of prior and calculation of the posterior
uniform_prior     <- function(mu) sapply(mu, function(x) ifelse(x > mu_lim[1] && x < mu_lim[2], p_mu, 0))
uniform_posterior <- function(mu) posterior(mu, uniform_prior, pois_likelihood, lower=mu_lim[1], upper=mu_lim[2], x=observed_particles)
#compute the 95% credibility interval
uniform_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(uniform_posterior, p = P, lower = mu_lim[1], upper = mu_lim[2]))
#-------------- Plot the posterior --------------
curve(uniform_posterior, from = 0, to = mu_lim[2], xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a uniform prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=uniform_95_interval[1], to=uniform_95_interval[2], length.out=500)
y_plot <- c(0, uniform_posterior(x_plot), 0)
x_plot <- c(uniform_95_interval[1], x_plot, uniform_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.5),border = NA)
abline(v = mean(observed_particles), col = color_vector[6], lwd=2, lty='dashed')
#--------- Computing mean, std, median ----------
mean_uniform   <- mean_pdf(uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
std_uniform    <- std_pdf (uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
median_uniform <- inverse_cumulative(uniform_posterior, 0.5, mu_lim[1], mu_lim[2])
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_uniform, std_uniform, median_uniform, uniform_95_interval[1], uniform_95_interval[2])
)
#------------------------------------------------
#------------------ GAMMA PRIOR -----------------
#------------------------------------------------
mean_prior  <- 3
sigma_prior <- 1
#calculate the parameters from the hypothesis
shape <- (mean_prior / sigma_prior)^2
rate <- mean_prior/(sigma_prior^2)
#definition of prior and calculation of the posterior and 95% credibility interval
gamma_prior       <- function(mu) dgamma(mu, shape = shape, rate = rate)
gamma_posterior   <- function(mu) posterior(mu, gamma_prior, pois_likelihood, lower=0, upper=Inf, x=observed_particles)
gamma_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(gamma_posterior, p = P, lower = 0, upper = 10))
#-------------- Plot the posterior --------------
curve(gamma_posterior, from = 0, to = 11, xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a gamma prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=gamma_95_interval[1], to=gamma_95_interval[2], length.out=100)
y_plot <- c(0, gamma_posterior(x_plot), 0)
x_plot <- c(gamma_95_interval[1], x_plot, gamma_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[7], alpha.f = 0.25),border = NA)
abline(v = mean(observed_particles), col = color_vector[6], lwd=2, lty='dashed')
#--------- Computing mean, std, median ----------
mean_gamma   <- mean_pdf(gamma_posterior, lower = 0, upper=Inf)
std_gamma    <- std_pdf (gamma_posterior, lower = 0, upper=Inf)
median_gamma <- inverse_cumulative(gamma_posterior, 0.5, 0, 20)
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_gamma, std_gamma, median_gamma, gamma_95_interval[1], gamma_95_interval[2])
)
#------------------------------------------------
#------------------ GAMMA PRIOR -----------------
#------------------------------------------------
mean_prior  <- 3
sigma_prior <- 1
#calculate the parameters from the hypothesis
shape <- (mean_prior / sigma_prior)^2
rate <- mean_prior/(sigma_prior^2)
#definition of prior and calculation of the posterior and 95% credibility interval
gamma_prior       <- function(mu) dgamma(mu, shape = shape, rate = rate)
gamma_posterior   <- function(mu) posterior(mu, gamma_prior, pois_likelihood, lower=0, upper=Inf, x=observed_particles)
gamma_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(gamma_posterior, p = P, lower = 0, upper = 10))
#-------------- Plot the posterior --------------
curve(gamma_posterior, from = 0, to = 11, xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a gamma prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=gamma_95_interval[1], to=gamma_95_interval[2], length.out=100)
y_plot <- c(0, gamma_posterior(x_plot), 0)
x_plot <- c(gamma_95_interval[1], x_plot, gamma_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.5),border = NA)
abline(v = mean(observed_particles), col = color_vector[6], lwd=2, lty='dashed')
#--------- Computing mean, std, median ----------
mean_gamma   <- mean_pdf(gamma_posterior, lower = 0, upper=Inf)
std_gamma    <- std_pdf (gamma_posterior, lower = 0, upper=Inf)
median_gamma <- inverse_cumulative(gamma_posterior, 0.5, 0, 20)
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_gamma, std_gamma, median_gamma, gamma_95_interval[1], gamma_95_interval[2])
)
#coding the data from the observations
observed_particles <- c(4, 1, 3, 1, 5, 3)
particles_mean <- observed_particles %>% mean
particles_std  <- observed_particles %>% sd
writeLines(sprintf(
'The observed number of particles in a fixed time interval of 10s is on average %.1f, with a standard deviation of %.1f',
particles_mean, particles_std
))
#------------------------------------------------
#------------ POSITIVE UNIFORM PRIOR ------------
#------------------------------------------------
#boundaries for the uniform prior
mu_lim <- c(1, 20)
p_mu <- 1./(mu_lim[2]-mu_lim[1])
#definition of prior and calculation of the posterior
uniform_prior     <- function(mu) sapply(mu, function(x) ifelse(x > mu_lim[1] && x < mu_lim[2], p_mu, 0))
uniform_posterior <- function(mu) posterior(mu, uniform_prior, pois_likelihood, lower=mu_lim[1], upper=mu_lim[2], x=observed_particles)
#compute the 95% credibility interval
uniform_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(uniform_posterior, p = P, lower = mu_lim[1], upper = mu_lim[2]))
mean_uniform   <- mean_pdf(uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
std_uniform    <- std_pdf (uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
median_uniform <- inverse_cumulative(uniform_posterior, 0.5, mu_lim[1], mu_lim[2])
#-------------- Plot the posterior --------------
curve(uniform_posterior, from = 0, to = mu_lim[2], xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a uniform prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=uniform_95_interval[1], to=uniform_95_interval[2], length.out=500)
y_plot <- c(0, uniform_posterior(x_plot), 0)
x_plot <- c(uniform_95_interval[1], x_plot, uniform_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.5),border = NA)
abline(v = mean_uniform, col = color_vector[7], lwd=2, lty='dashed')
abline(v=mean_uniform - std_uniform, col = color_vector[6], lwd=2, lty='dashed')
abline(v=mean_uniform + std_uniform, col = color_vector[6], lwd=2, lty='dashed')
legend("topright", legend = c("Posterior", "Mean", "±σ"), col = c(color_vector[1], color_vector[7], color_vector[6]), lty = c('solid', 'longdash', 'dashed'))
legend("right", legend="95%% credibility interval", fill=color_vector[5])
#--------- OUTPUT ----------
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_uniform, std_uniform, median_uniform, uniform_95_interval[1], uniform_95_interval[2])
)
#coding the data from the observations
observed_particles <- c(4, 1, 3, 1, 5, 3)
particles_mean <- observed_particles %>% mean
particles_std  <- observed_particles %>% sd
writeLines(sprintf(
'The observed number of particles in a fixed time interval of 10s is on average %.1f, with a standard deviation of %.1f',
particles_mean, particles_std
))
#------------------------------------------------
#------------ POSITIVE UNIFORM PRIOR ------------
#------------------------------------------------
#boundaries for the uniform prior
mu_lim <- c(1, 20)
p_mu <- 1./(mu_lim[2]-mu_lim[1])
#definition of prior and calculation of the posterior
uniform_prior     <- function(mu) sapply(mu, function(x) ifelse(x > mu_lim[1] && x < mu_lim[2], p_mu, 0))
uniform_posterior <- function(mu) posterior(mu, uniform_prior, pois_likelihood, lower=mu_lim[1], upper=mu_lim[2], x=observed_particles)
#compute the 95% credibility interval
uniform_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(uniform_posterior, p = P, lower = mu_lim[1], upper = mu_lim[2]))
mean_uniform   <- mean_pdf(uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
std_uniform    <- std_pdf (uniform_posterior, lower = mu_lim[1], upper=mu_lim[2])
median_uniform <- inverse_cumulative(uniform_posterior, 0.5, mu_lim[1], mu_lim[2])
#-------------- Plot the posterior --------------
curve(uniform_posterior, from = 0, to = mu_lim[2], xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a uniform prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=uniform_95_interval[1], to=uniform_95_interval[2], length.out=500)
y_plot <- c(0, uniform_posterior(x_plot), 0)
x_plot <- c(uniform_95_interval[1], x_plot, uniform_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.25),border = NA)
abline(v = mean_uniform, col = color_vector[7], lwd=2, lty='dashed')
abline(v=mean_uniform - std_uniform, col = color_vector[6], lwd=2, lty='dashed')
abline(v=mean_uniform + std_uniform, col = color_vector[6], lwd=2, lty='dashed')
legend("topright", legend = c("Posterior", "Mean", "±σ"), col = c(color_vector[1], color_vector[7], color_vector[6]), lty = c('solid', 'longdash', 'dashed'))
legend("right", legend="95%% credibility interval", fill=color_vector[5])
#--------- OUTPUT ----------
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_uniform, std_uniform, median_uniform, uniform_95_interval[1], uniform_95_interval[2])
)
#------------------------------------------------
#------------------ GAMMA PRIOR -----------------
#------------------------------------------------
mean_prior  <- 3
sigma_prior <- 1
#calculate the parameters from the hypothesis
shape <- (mean_prior / sigma_prior)^2
rate <- mean_prior/(sigma_prior^2)
#definition of prior and calculation of the posterior and 95% credibility interval
gamma_prior       <- function(mu) dgamma(mu, shape = shape, rate = rate)
gamma_posterior   <- function(mu) posterior(mu, gamma_prior, pois_likelihood, lower=0, upper=Inf, x=observed_particles)
gamma_95_interval <- sapply(c(0.025, 0.975), function(P) inverse_cumulative(gamma_posterior, p = P, lower = 0, upper = 10))
mean_gamma   <- mean_pdf(gamma_posterior, lower = 0, upper=Inf)
std_gamma    <- std_pdf (gamma_posterior, lower = 0, upper=Inf)
median_gamma <- inverse_cumulative(gamma_posterior, 0.5, 0, 20)
#-------------- Plot the posterior --------------
curve(gamma_posterior, from = 0, to = 11, xlab = expression(mu), ylab = 'Posterior', col=color_vector[1], main='Activity using a gamma prior', xlim = c(0,8), lwd=2, n = 500)
grid()
x_plot <- seq(from=gamma_95_interval[1], to=gamma_95_interval[2], length.out=100)
y_plot <- c(0, gamma_posterior(x_plot), 0)
x_plot <- c(gamma_95_interval[1], x_plot, gamma_95_interval[2])
polygon(x_plot, y_plot, col = adjustcolor(color_vector[5], alpha.f = 0.25),border = NA)
abline(v = mean_gamma, col = color_vector[7], lwd=2, lty='dashed')
abline(v=mean_gamma - std_gamma, col = color_vector[6], lwd=2, lty='dashed')
abline(v=mean_gamma + std_gamma, col = color_vector[6], lwd=2, lty='dashed')
legend("topright", legend = c("Posterior", "Mean", "±σ"), col = c(color_vector[1], color_vector[7], color_vector[6]), lty = c('solid', 'longdash', 'dashed'))
legend("right", legend="95%% credibility interval", fill=color_vector[5])
#--------- OUTPUT ----------
writeLines(sprintf(
'
The mean of the posterior is: %.2f ;
The standard deviation is: %.2f ;
The median is : %.2f ;
The 95%% credibility interval is: [ %.2f, %.2f ]
', mean_gamma, std_gamma, median_gamma, gamma_95_interval[1], gamma_95_interval[2])
)
n = 500
r = 312
#---------- CALCULATIONS ----------
uniform_prior     <- function(eff) sapply(eff, function(x) ifelse(x>=0 && x<=1, 1, 0))
uniform_posterior <- function(eff) posterior(eff, uniform_prior, binom_likelihood, lower=0, upper=1, size=n, x=r)
jeffrey_prior     <- function(eff) dbeta(eff, 0.5, 0.5)
jeffrey_posterior <- function(eff) posterior(eff, jeffrey_prior, binom_likelihood, lower=0, upper=1, size=n, x=r)
mean_uniform <- mean_pdf(uniform_posterior, lower = 0, upper=1)
std_uniform  <- std_pdf (uniform_posterior, lower = 0, upper=1)
mean_jeffrey <- mean_pdf(jeffrey_posterior, lower = 0, upper=1)
std_jeffrey  <- std_pdf (jeffrey_posterior, lower = 0, upper=1)
#-------------- PLOT --------------
curve(uniform_posterior, from = 0, to = 1, xlab = expression(Efficiency), ylab = 'Posterior', col=color_vector[1], main='Researcher A', xlim = c(.5,.75), lwd=2, n = 500)
curve(jeffrey_posterior, from = 0, to = 1, xlab = expression(Efficiency), ylab = 'Posterior', col=color_vector[6], lty=2, add=TRUE, lwd=2, n = 500)
grid()
legend("topright", legend = c("Uniform Posterior", "Jeffrey Posterior"), col = c(color_vector[1], color_vector[6]), lty = c(1, 2))
#------------ OUTPUT --------------
writeLines(sprintf(
"
Using a uniform prior the posterior has   mean %.3f with standard deviation %.2f .
Using a Jeffrey's prior the posterior has mean %.3f with standard deviation %.2f .
", mean_uniform, std_uniform, mean_jeffrey, std_jeffrey))
# Given data
N_poll <- 100
data_poll <- c(32, 14, 26, 28)
N <- 200
data <- c(57, 31, 45, 67)
labels <- c("A", "B", "C", "D")
#-------------------------------------------------------------
#-------------------------- COMPUTATION ----------------------
#-------------------------------------------------------------
# Priors
alpha_uniform_prior <- c(1., 1., 1., 1.)
alpha_poll_prior <- data_poll
# Posterior parameters
alpha_uniform_posterior <- alpha_uniform_prior + data
alpha_poll_posterior <- alpha_poll_prior + data
# Posterior means and standard deviations
uniform_alpha_0 <- sum(alpha_uniform_posterior)
uniform_means <- alpha_uniform_posterior / uniform_alpha_0
uniform_std <- sqrt((uniform_means * (1 - uniform_means)) / (uniform_alpha_0 + 1))
poll_alpha_0 <- sum(alpha_poll_posterior)
poll_means <- alpha_poll_posterior /poll_alpha_0
poll_std <- sqrt((poll_means * (1 - poll_means)) / (poll_alpha_0 + 1))
# Posterior credibility intervals
uniform_68_interval <- sapply(alpha_uniform_posterior , function(alpha_i) qbeta(c(.16, .84), shape1=alpha_i, shape2 = uniform_alpha_0 - alpha_i))
poll_68_interval <- sapply(alpha_poll_posterior , function(alpha_i) qbeta(c(.16, .84), shape1=alpha_i, shape2 = poll_alpha_0 - alpha_i))
#-------------------------------------------------------------
#---------------------------- OUTPUT -------------------------
#-------------------------------------------------------------
# Output results
output <- sprintf(
"
- Assuming a uniform prior, the most probable values for p are [ %.3f , %.3f , %.3f , %.3f ]
- The standard deviations are [ %.3f , %.3f , %.3f , %.3f ]
- The 68%% credibility intervals are [ %.2f-%.2f , %.2f-%.2f , %.2f-%.2f , %.2f-%.2f ]
- Assuming the poll's prior, the most probable values are [ %.3f , %.3f , %.3f , %.3f ]
- The standard deviations are [ %.3f , %.3f , %.3f , %.3f ]
- The 68%% credibility intervals are [ %.2f-%.2f , %.2f-%.2f , %.2f-%.2f , %.2f-%.2f ]
",
uniform_means[1], uniform_means[2], uniform_means[3], uniform_means[4],
uniform_std[1], uniform_std[2], uniform_std[3], uniform_std[4],
uniform_68_interval[1,1], uniform_68_interval[2,1], uniform_68_interval[1,2], uniform_68_interval[2,2],
uniform_68_interval[1,3], uniform_68_interval[2,3], uniform_68_interval[1,4], uniform_68_interval[2,4],
poll_means[1], poll_means[2], poll_means[3], poll_means[4],
poll_std[1], poll_std[2], poll_std[3], poll_std[4],
poll_68_interval[1,1], poll_68_interval[2,1], poll_68_interval[1,2], poll_68_interval[2,2],
poll_68_interval[1,3], poll_68_interval[2,3], poll_68_interval[1,4], poll_68_interval[2,4]
)
cat(output)
#-------------------------------------------------------------
#----------------------------- PLOTS -------------------------
#-------------------------------------------------------------
# Data for plotting
data_plot <- data.frame(
Label = rep(labels, 2),
Mean = c(uniform_means, poll_means),
Std = c(uniform_std, poll_std),
Prior = rep(c("Uniform", "Poll-based"), each = length(labels))
)
# Melt the dataframe for ggplot2
data_melt <- melt(data_plot, id.vars = c("Label", "Prior"))
# Plotting
ggplot(data_melt, aes(x = Label, y = value, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ variable, scales = "free_y", ncol = 1) +
labs(title = "Posterior Distributions",
y = "Value",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform" = "blue", "Poll-based" = "green"))
# Prepare data for ggplot2
df_means <- data.frame(
Label = rep(labels, 2),
Mean = c(uniform_means, poll_means),
Lower = c(uniform_68_interval[1,], poll_68_interval[1,]),
Upper = c(uniform_68_interval[2,], poll_68_interval[2,]),
Prior = rep(c("Uniform Prior", "Poll-based Prior"), each = length(labels))
)
df_std <- data.frame(
Label = rep(labels, 2),
Std = c(uniform_std, poll_std),
Prior = rep(c("Uniform Prior", "Poll-based Prior"), each = length(labels))
)
# Plot means with credibility intervals
ggplot(df_means, aes(x = Label, y = Mean, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_errorbar(aes(ymin = Lower, ymax = Upper), position = position_dodge(width = 0.7), width = 0.2) +
labs(title = "Posterior Means with 68% Credibility Intervals",
y = "Mean",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform Prior" = "blue", "Poll-based Prior" = "green"))
# Plot standard deviations
ggplot(df_std, aes(x = Label, y = Std, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
labs(title = "Posterior Standard Deviations",
y = "Standard Deviation",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform Prior" = "blue", "Poll-based Prior" = "green"))
# Given data
N_poll <- 100
data_poll <- c(32, 14, 26, 28)
N <- 200
data <- c(57, 31, 45, 67)
labels <- c("A", "B", "C", "D")
#-------------------------------------------------------------
#-------------------------- COMPUTATION ----------------------
#-------------------------------------------------------------
# Priors
alpha_uniform_prior <- c(1., 1., 1., 1.)
alpha_poll_prior <- data_poll
# Posterior parameters
alpha_uniform_posterior <- alpha_uniform_prior + data
alpha_poll_posterior <- alpha_poll_prior + data
# Posterior means and standard deviations
uniform_alpha_0 <- sum(alpha_uniform_posterior)
uniform_means <- alpha_uniform_posterior / uniform_alpha_0
uniform_std <- sqrt((uniform_means * (1 - uniform_means)) / (uniform_alpha_0 + 1))
poll_alpha_0 <- sum(alpha_poll_posterior)
poll_means <- alpha_poll_posterior /poll_alpha_0
poll_std <- sqrt((poll_means * (1 - poll_means)) / (poll_alpha_0 + 1))
# Posterior credibility intervals
uniform_68_interval <- sapply(alpha_uniform_posterior , function(alpha_i) qbeta(c(.16, .84), shape1=alpha_i, shape2 = uniform_alpha_0 - alpha_i))
poll_68_interval <- sapply(alpha_poll_posterior , function(alpha_i) qbeta(c(.16, .84), shape1=alpha_i, shape2 = poll_alpha_0 - alpha_i))
#-------------------------------------------------------------
#---------------------------- OUTPUT -------------------------
#-------------------------------------------------------------
# Output results
output <- sprintf(
"
- Assuming a uniform prior, the most probable values for p are [ %.3f , %.3f , %.3f , %.3f ]
- The standard deviations are [ %.3f , %.3f , %.3f , %.3f ]
- The 68%% credibility intervals are [ %.2f-%.2f , %.2f-%.2f , %.2f-%.2f , %.2f-%.2f ]
- Assuming the poll's prior, the most probable values are [ %.3f , %.3f , %.3f , %.3f ]
- The standard deviations are [ %.3f , %.3f , %.3f , %.3f ]
- The 68%% credibility intervals are [ %.2f-%.2f , %.2f-%.2f , %.2f-%.2f , %.2f-%.2f ]
",
uniform_means[1], uniform_means[2], uniform_means[3], uniform_means[4],
uniform_std[1], uniform_std[2], uniform_std[3], uniform_std[4],
uniform_68_interval[1,1], uniform_68_interval[2,1], uniform_68_interval[1,2], uniform_68_interval[2,2],
uniform_68_interval[1,3], uniform_68_interval[2,3], uniform_68_interval[1,4], uniform_68_interval[2,4],
poll_means[1], poll_means[2], poll_means[3], poll_means[4],
poll_std[1], poll_std[2], poll_std[3], poll_std[4],
poll_68_interval[1,1], poll_68_interval[2,1], poll_68_interval[1,2], poll_68_interval[2,2],
poll_68_interval[1,3], poll_68_interval[2,3], poll_68_interval[1,4], poll_68_interval[2,4]
)
cat(output)
#-------------------------------------------------------------
#----------------------------- PLOTS -------------------------
#-------------------------------------------------------------
# Data for plotting
data_plot <- data.frame(
Label = rep(labels, 2),
Mean = c(uniform_means, poll_means),
Std = c(uniform_std, poll_std),
Prior = rep(c("Uniform", "Poll-based"), each = length(labels))
)
# Melt the dataframe for ggplot2
data_melt <- melt(data_plot, id.vars = c("Label", "Prior"))
# Plotting
ggplot(data_melt, aes(x = Label, y = value, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Posterior Distributions",
y = "Value",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform" = "blue", "Poll-based" = "green"))
# Prepare data for ggplot2
df_means <- data.frame(
Label = rep(labels, 2),
Mean = c(uniform_means, poll_means),
Lower = c(uniform_68_interval[1,], poll_68_interval[1,]),
Upper = c(uniform_68_interval[2,], poll_68_interval[2,]),
Prior = rep(c("Uniform Prior", "Poll-based Prior"), each = length(labels))
)
df_std <- data.frame(
Label = rep(labels, 2),
Std = c(uniform_std, poll_std),
Prior = rep(c("Uniform Prior", "Poll-based Prior"), each = length(labels))
)
# Plot means with credibility intervals
ggplot(df_means, aes(x = Label, y = Mean, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_errorbar(aes(ymin = Lower, ymax = Upper), position = position_dodge(width = 0.7), width = 0.2) +
labs(title = "Posterior Means with 68% Credibility Intervals",
y = "Mean",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform Prior" = "blue", "Poll-based Prior" = "green"))
# Plot standard deviations
ggplot(df_std, aes(x = Label, y = Std, fill = Prior)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
labs(title = "Posterior Standard Deviations",
y = "Standard Deviation",
x = "Labels") +
theme_minimal() +
scale_fill_manual(values = c("Uniform Prior" = "blue", "Poll-based Prior" = "green"))
