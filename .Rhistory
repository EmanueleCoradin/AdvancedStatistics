# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) sapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 2 # How many times do we select a new box
N_ball <- 2 # How many times do we select a ball from each box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) sapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 2 # How many times do we select a new box
N_ball <- 2 # How many times do we select a ball from each box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) lapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 2 # How many times do we select a new box
N_ball <- 2 # How many times do we select a ball from each box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) lapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
knitr::opts_chunk$set(echo = TRUE)
color_vector <- c("#CC0000",   # Dark red
"#CC79A7",   # Muted purple
"#D55E00",   # Vermilion
"#009E73",   # Bluish green
"#56B4E9",   # Sky blue
'#000046',   # Deep Blue
"#DB1E60",   # Pinkish-red
"#E69F00")   # Yellow-orange
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) lapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# Coding the evolution of the probability for each ball sampling
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) lapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# Coding the evolution of the probability for each ball sampling
ball_seq
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- function(index) lapply(index, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling(box_sampling))
# Coding the evolution of the probability for each ball sampling
ball_sampling
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
ball_sampling[1]
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
ball_sampling[[1]]
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
ball_sampling[[1]][1:5]
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
sum(ball_sampling[[1]][1:5])
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
N_white <- lapply(box_sampling, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
N_white <- lapply(box_sampling, function(ibox) print(ibox))
print(N_white)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Coding the evolution of the probability for each ball sampling
N_white <- lapply(seq_along(box_sampling), function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
print(N_white)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(1:7, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
print(N_white)
P_white
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
print(N_white)
P_white
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
sapply(N_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
sapply(l_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
lapply(N_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
mapply(N_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
sapply(N_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
sapply(N_white, function(n_white) print(n_white+1) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
lapply(box_seq, function(ibox) print(N_white[[ibox]]))
sapply( sapply(N_white, function(n_white) print(n_white) )
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
lapply(box_seq, function(ibox) print(N_white[[ibox]]))
z <- zipup(1:10, Rle(1L, 10))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
mapply(function(n_white, n_samples) dbinom(x=n_white, size = n_samples, prob = P_white[1]), N_white[[1]], ball_seq)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
print(mapply(function(n_white, n_samples) dbinom(x=n_white, size = n_samples, prob = P_white[1]), N_white[[1]], ball_seq))
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- mapply(function(n_white, n_samples) dbinom(x=n_white, size = n_samples, prob = P_white[1]), N_white[[1]], ball_seq)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- mapply(function(n_white, n_samples) dbinom(x=n_white, size = n_samples, prob = P_white[1]), N_white[[1]], ball_seq)
print(likelihood_list)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- mapply(function(n_white, n_samples) {
print(sprintf('%i, %i', n_white, n_samples))
dbinom(x=n_white, size = n_samples, prob = P_white[1])
}
, N_white[[1]], ball_seq)
print(likelihood_list)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- mapply(function(n_white, n_samples) {
print(sprintf('%i, %i', n_white, n_samples))
print()
dbinom(x=n_white, size = n_samples, prob = P_white[4])
}
, N_white[[1]], ball_seq)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- mapply(function(n_white, n_samples) {
print(sprintf('%i, %i', n_white, n_samples))
dbinom(x=n_white, size = n_samples, prob = P_white[4])
}
, N_white[[1]], ball_seq)
print(likelihood_list)
# building the boxes, s.t. the box i contains i white balls (=1)
box <- lapply(1:7, function(i) sapply(1:6, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:6, function(ibox) ibox/6.)
N_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_box
# Select the boxes
box_sampling <- sample(1:7, N_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- lapply(box_seq,
function (ibox) mapply(
function(n_white, n_samples)
dbinom(x=n_white, size = n_samples, prob = P_white[ibox])
, N_white[[1]], ball_seq)
)
print(likelihood_list)
# building the boxes, s.t. the box i contains i white balls (=1)
N_box <- 7
box <- lapply(1:N_box, function(i) sapply(1:N_box-1, function(j) ifelse(j < i, 1, 0)))
P_white <- sapply(0:(N_box-1), function(ibox) ibox/(N_box-1))
N_extracted_box  <- 1 # How many times do we select a new box
N_ball <- 10 # How many times do we select a ball from each box
ball_seq <- 1:N_ball
box_seq  <- 1:N_extracted_box
# Select the boxes
box_sampling <- sample(1:7, N_extracted_box, replace=TRUE)
print(box_sampling)
# Coding the process of selecting some balls
ball_sampling <- lapply(box_sampling, function(i) sample(box[[i]], N_ball, replace=TRUE))
print(ball_sampling)
# Calculate the partial sum over the white sampling for each step
N_white <- lapply(box_seq, function(ibox) sapply(ball_seq, function(jball) sum(ball_sampling[[ibox]][1:jball])))
likelihood_list <- lapply(1:N_box,
function (ibox) mapply(
function(n_white, n_samples)
dbinom(x=n_white, size = n_samples, prob = P_white[ibox])
, N_white[[1]], ball_seq)
)
print(likelihood_list)
